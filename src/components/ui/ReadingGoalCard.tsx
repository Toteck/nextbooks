"use client";

import React, { useState } from "react"; 
import { Card, CardContent, CardTitle, CardHeader } from "@/components/ui/card";
import { Progress } from "@/components/ui/progress";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button"; 

import { cn } from "@/lib/utils";
import { useReadingGoalStats, ReadingGoalStats } from "@/hooks/useReadingGoalStats";
import { Target, Pencil, Check, X } from "lucide-react";

interface ReadingGoalCardProps {
Â  data?: ReadingGoalStats;
Â  className?: string;
Â  compact?: boolean;
}

export function ReadingGoalCard({
Â  data,
Â  className,
Â  compact = false,
}: ReadingGoalCardProps) { Â 
Â  
Â  const [annualGoal, setAnnualGoal] = useState(20); 
Â  const [isEditing, setIsEditing] = useState(false);
Â  const [newGoal, setNewGoal] = useState(annualGoal);

Â  const statsFromHook = useReadingGoalStats({ annualGoal });
Â  const { year, booksRead } = data || statsFromHook;
Â  
Â  const handleSave = () => {
    // ValidaÃ§Ã£o bÃ¡sica para evitar NaN
    if (newGoal > 0) {
        setAnnualGoal(Number(newGoal));
    }
Â  Â  setIsEditing(false);
Â  };

Â  const handleCancel = () => {
Â  Â  setNewGoal(annualGoal); 
Â  Â  setIsEditing(false);
Â  };

Â  const safeAnnualGoal = annualGoal > 0 ? annualGoal : 1;
Â  const progressPercentage = Math.min(
Â  Â  100,
Â  Â  Math.round((booksRead / safeAnnualGoal) * 100)
Â  );
Â  const remainingBooks = Math.max(0, annualGoal - booksRead);
Â  const isGoalReached = remainingBooks === 0 && booksRead >= annualGoal;

Â  return (
Â  Â  <Card
Â  Â  Â  className={cn(
Â  Â  Â  Â  "w-full",
Â  Â  Â  Â  { "border-none shadow-none p-0 py-1": compact },
Â  Â  Â  Â  { "flex flex-col gap-2 rounded-xl border py-1 shadow-sm": !compact },
Â  Â  Â  Â  className
Â  Â  Â  )}
Â  Â  >
Â  Â  Â  <CardHeader className={cn("p-0 px-2 py-1", { "p-0": compact })}>
Â  Â  Â  Â  <CardTitle className="flex items-center gap-2 text-xl font-bold text-purple-700">
Â  Â  Â  Â  Â  <Target className="h-6 w-6" />
Â  Â  Â  Â  Â  <span>{year} Meta de Leitura</span>
Â  Â  Â  Â  </CardTitle>
Â  Â  Â  </CardHeader>

        <CardContent className={cn(
            "space-y-1 p-0 px-4",
            compact ? "p-0 pt-0" : ""
        )}>
Â  Â  Â  Â  <div className="flex flex-col gap-0.5">
Â  Â  Â  Â  Â  <p className={cn("font-extrabold text-zinc-900", compact ? "text-2xl" : "text-4xl")}>
Â  Â  Â  Â  Â  Â  {booksRead}
Â  Â  Â  Â  Â  Â  {isEditing ? (
Â  Â  Â  Â  Â  Â  Â  <div className="flex items-center gap-2 mt-2">
Â  Â  Â  Â  Â  Â  Â  Â  <span className={cn("text-gray-500 font-medium", compact ? "text-base" : "text-xl")}>de</span>
Â  Â  Â  Â  Â  Â  Â  Â  <Input
Â  Â  Â  Â  Â  Â  Â  Â  Â  type="number"
                  label="" 
Â  Â  Â  Â  Â  Â  Â  Â  Â  value={newGoal}
Â  Â  Â  Â  Â  Â  Â  Â  Â  onChange={(e) => setNewGoal(Number(e.target.value))} 
Â  Â  Â  Â  Â  Â  Â  Â  Â  className="h-10 w-24 text-xl"
Â  Â  Â  Â  Â  Â  Â  Â  Â  autoFocus
Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  <Button onClick={handleSave} size="icon" className="bg-purple-600 hover:bg-purple-700">
Â  Â  Â  Â  Â  Â  Â  Â  Â  <Check className="h-4 w-4" />
Â  Â  Â  Â  Â  Â  Â  Â  </Button>
Â  Â  Â  Â  Â  Â  Â  Â  <Button onClick={handleCancel} size="icon" variant="ghost">
Â  Â  Â  Â  Â  Â  Â  Â  Â  <X className="h-4 w-4" />
Â  Â  Â  Â  Â  Â  Â  Â  </Button>
Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  Â  Â  <span className={cn("text-gray-500 font-medium", compact ? "text-base" : "text-xl")}>
Â  Â  Â  Â  Â  Â  Â  Â  {" "}
Â  Â  Â  Â  Â  Â  Â  Â  de {annualGoal} livros
Â  Â  Â  Â  Â  Â  Â  Â  <Button
Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => setIsEditing(true)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  size="icon"
Â  Â  Â  Â  Â  Â  Â  Â  Â  variant="ghost"
Â  Â  Â  Â  Â  Â  Â  Â  Â  className="ml-2 h-6 w-6"
Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  <Pencil className="h-4 w-4 text-gray-500" />
Â  Â  Â  Â  Â  Â  Â  Â  </Button>
Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  </p>
Â  Â  Â  Â  </div>
Â  Â  Â  Â  <Progress
Â  Â  Â  Â  Â  value={progressPercentage}
Â  Â  Â  Â  Â  className="[&>div:first-child]:bg-purple-600 [&>div:first-child]:transition-all [&>div:first-child]:duration-500"
Â  Â  Â  Â  />
Â  Â  Â  Â  <div className="flex justify-between items-center text-sm font-medium">
Â  Â  Â  Â  Â  <p className="text-gray-600">
Â  Â  Â  Â  Â  Â  {isGoalReached ? (
Â  Â  Â  Â  Â  Â  Â  <span className="font-bold text-purple-700">
Â  Â  Â  Â  Â  Â  Â  Â  Meta {year} Atingida! ðŸŽ‰
Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  Â  Â  <>
Â  Â  Â  Â  Â  Â  Â  Â  Faltam{" "}
Â  Â  Â  Â  Â  Â  Â  Â  <span className="font-bold text-purple-700">
Â  Â  Â  Â  Â  Â  Â  Â  Â  {remainingBooks}
Â  Â  Â  Â  Â  Â  Â  Â  </span>{" "}
Â  Â  Â  Â  Â  Â  Â  Â  livros para a meta
Â  Â  Â  Â  Â  Â  Â  </>
Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  </p>
Â  Â  Â  Â  Â  <p className="font-semibold text-purple-700">{progressPercentage}%</p>
Â  Â  Â  Â  </div>
Â  Â  Â  </CardContent>
Â  Â  </Card>
Â  );
}